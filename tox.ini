[tox]
envlist = lint, test, doc
skipsdist = true

[testenv]
setenv = LANG=C.UTF-8
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt

[shellcheck]
find = find . -type f | grep -vE "^\./(\.git|\.tox|docs/_build)"
filter = file --mime-type -Nnf- | grep shellscript | cut -f1 -d:

[testenv:lint]
allowlist_externals = bash, xargs
commands_pre =
    bash -c 'set -o pipefail; {[shellcheck]find} | {[shellcheck]filter} > {envtmpdir}/shellcheck_files'
commands =
    xargs -ra {envtmpdir}/shellcheck_files shellcheck
    flake8 --count --show-source --statistics \
       --extend-ignore=W605,E501,E203 \
       --extend-exclude=build,docs,dist,bin . bin/scap release-scripts/perform-release
    black --check --diff . bin/scap release-scripts/perform-release
    
[testenv:test]
allowlist_externals = bash
commands =
    coverage run -m pytest -q -Werror --ignore=tests/scap/integration --junitxml=test-reports/junit.xml {posargs}
    coverage html
    coverage xml
    bash -c 'echo -n "Test coverage "; coverage report | grep ^TOTAL'
    
[testenv:doc]
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/docs/requirements.txt
commands = sphinx-build -q -W -b html docs/ docs/_build/html

[testenv:venv]
commands = {posargs}

[coverage:run]
omit = tests/scap/*
branch = True

[coverage:report]
show_missing = True
skip_empty = True

[coverage:html]
directory = test-reports/htmlcov

[coverage:xml]
output = test-reports/coverage.xml
