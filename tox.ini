[tox]
envlist = lint, test, doc
skipsdist = true

[testenv]
setenv = LANG=C.UTF-8
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/test-requirements.txt

[lint]
targets= . bin/scap release-scripts/perform-release

[shellcheck]
find = find . -type f -name "*.sh" | grep -vE "^\./(\.git|\.tox|docs/_build|web)/"
extras = release-scripts/scaps-installed-in-beta release-scripts/update-scap-in-beta

[testenv:lint]
deps =
    black==23.3.0
    flake8==5.0.4
    shellcheck-py
allowlist_externals = bash, xargs, flake8
commands_pre =
    bash -c 'set -o pipefail; echo {[shellcheck]extras} > {envtmpdir}/shellcheck_files; {[shellcheck]find} >> {envtmpdir}/shellcheck_files'
commands =
    xargs -ra {envtmpdir}/shellcheck_files shellcheck
    flake8 --count --show-source --statistics \
       --extend-ignore=W605,E501,E203 \
       --per-file-ignores='scap/__init__.py: F401' \
       --extend-exclude=build,docs,dist,bin,web {[lint]targets}
    black --check --diff {[lint]targets}
    
[testenv:reformat]
deps = black==23.3.0
commands = black {[lint]targets}

[testenv:test]
allowlist_externals = bash
commands =
    coverage run -m pytest -q -Werror --ignore=tests/scap/integration --junitxml=test-reports/junit.xml {posargs}
    coverage html
    coverage xml
    bash -c 'echo -n "Test coverage "; coverage report | grep ^TOTAL'
    
[testenv:doc]
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/docs/requirements.txt
commands = sphinx-build -q -W -b html docs/ docs/_build/html

[testenv:venv]
commands = {posargs}

[coverage:run]
omit = tests/scap/*
branch = True

[coverage:report]
show_missing = True
skip_empty = True

[coverage:html]
directory = test-reports/htmlcov

[coverage:xml]
output = test-reports/coverage.xml
