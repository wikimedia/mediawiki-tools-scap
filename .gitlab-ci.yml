include:
  - project: repos/releng/kokkuri
    file: includes/images.yaml
    ref: review/dancy/pipeline-timestamp
  - project: repos/releng/docpub
    file: includes/publish.yml

stages:
  - test
  - publish-dist
  - build-docs
  - publish-docs

test-kokkuri-vars:
  stage: test
  script: |
    if [ -z "$KOKKURI_PIPELINE_TIMESTAMP" ]; then echo KOKKURI_PIPELINE_TIMESTAMP is not set; exit 1; fi
    echo test passed.  KOKKURI_PIPELINE_TIMESTAMP is $KOKKURI_PIPELINE_TIMESTAMP

verify-deps:
  stage: test
  extends: .kokkuri:build-and-run-image
  parallel:
    matrix:
      - DISTRO: [buster, bullseye]
  variables:
    BUILD_VARIANT: verify-deps-$DISTRO

test:
  stage: test
  extends: .kokkuri:build-and-run-image
  parallel:
    matrix:
      - DISTRO: [buster, bullseye]
  variables:
    BUILD_VARIANT: test-$DISTRO

publish-dist:
  stage: publish-dist
  extends: .kokkuri:build-and-publish-image
  parallel:
    matrix:
      - DISTRO: [ buster, bullseye ]
  variables:
    BUILD_VARIANT: binary-dist-$DISTRO
    PUBLISH_IMAGE_NAME: ${CI_PROJECT_PATH}/$DISTRO
    PUBLISH_IMAGE_TAG: $CI_COMMIT_TAG
    PUBLISH_IMAGE_EXTRA_TAGS: 'latest'
  tags:
    - trusted
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED

.docs-job:
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_PROTECTED

build-docs:
  stage: build-docs
  extends:
    - .kokkuri:build-image
    - .docs-job
    - .docpub:build-docs
  variables:
    BUILD_VARIANT: docs
    # We'll end up with generated-documentation/docs/index.html, etc
    BUILDCTL_BUILD_FLAGS: --output type=local,dest=generated-documentation
    DOCS_DIR: generated-documentation/docs

publish-docs:
  stage: publish-docs
  extends:
    - .docs-job
    - .docpub:publish-docs
