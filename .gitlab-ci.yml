include:
  - project: 'repos/releng/kokkuri'
    file: 'includes/images.yaml'

stages:
  - test
  - build-docs
  - publish-docs
  - publish-dist

verify-deps:
  stage: test
  extends: .kokkuri:build-and-run-image
  parallel:
    matrix:
      - DISTRO: [buster, bullseye]
  variables:
    BUILD_VARIANT: verify-deps-$DISTRO

test:
  stage: test
  extends: .kokkuri:build-and-run-image
  parallel:
    matrix:
      - DISTRO: [buster, bullseye]
  variables:
    BUILD_VARIANT: test-$DISTRO

test-dist:
  stage: test
  extends: .kokkuri:build-and-run-image
  variables:
    BUILD_VARIANT: binary-dist
    RUN_ARGUMENTS: '["version"]'

.docs-job:
  tags:
    - trusted
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_REF_PROTECTED

build-docs:
  stage: build-docs
  extends:
    - .kokkuri:build-image
    - .docs-job
  variables:
    BUILD_VARIANT: docs
    # We'll end up with generated-documentation/docs/index.html, etc
    BUILDCTL_BUILD_FLAGS: --output type=local,dest=generated-documentation
  artifacts:
    paths:
      - generated-documentation
    expire_in: 1 hour

publish-docs:
  stage: publish-docs
  extends: .docs-job
  dependencies: [build-docs]
  image: docker-registry.wikimedia.org/wikimedia-buster
  script:
    # FIXME: Inefficient.  Need an image with rsync already installed
    - apt-get update && apt-get install -y rsync
    # Sync an empty dir named 'scap' WITHOUT deletion and with relative. That
    # creates the directories at the destination.
    #
    # We do not --archive which preserves date, time or permissions.
    # The base directory (such as ./cover) might have been populated by
    # puppet and thus owned by a different user than rsyncd.
    - (mkdir -p /tmp/blank/scap && cd /tmp/blank && rsync --recursive --relative scap rsync://doc.discovery.wmnet/doc/ )
    # Now do the real work
    - rsync --archive --stats --compress --delete-after generated-documentation/docs/ rsync://doc.discovery.wmnet/doc/scap/

publish-dist:
  stage: publish-dist
  extends: .kokkuri:build-and-publish-image
  variables:
    BUILD_VARIANT: binary-dist
  tags:
    - trusted
  rules:
    - if: $CI_COMMIT_TAG && $CI_COMMIT_REF_PROTECTED
